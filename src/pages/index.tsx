import Head from 'next/head';

import { makeFakePeople } from '@app/utils/fake-data';
import AppTable from '@app/components/app-table';
import { ColumnDef, createColumnHelper } from '@tanstack/react-table';
import { Person } from '@app/types';
import { useEffect, useReducer, useState } from 'react';
import { faker } from '@faker-js/faker';

const personColumnHelper = createColumnHelper<Person>();

const columns: ColumnDef<Person, any>[] = [
  personColumnHelper.accessor('title', {
    header: 'Title',
  }),

  personColumnHelper.accessor('name', {
    header: 'Name',
  }),

  personColumnHelper.accessor('gender', {
    header: 'Gender',
  }),

  personColumnHelper.accessor('age', {
    header: 'Age',
  }),

  personColumnHelper.accessor('address', {
    header: 'Address',
  }),

  personColumnHelper.accessor('bio', {
    header: 'Bio',
  }),
];

interface TableAction {
  type: 'SELECT_RADIO_ITEM' | 'SELECT_CHECKdiv_ITEM';
  payload: any;
}

interface PageTableSelectionState {
  selectedRadioItem: Person;
  selectedCheckdivItems: Person[];
}

const stateReducer = (state: PageTableSelectionState, action: TableAction) => {
  switch (action.type) {
    case 'SELECT_RADIO_ITEM':
      return {
        ...state,
        selectedRadioItem: action.payload,
      };
    case 'SELECT_CHECKdiv_ITEM':
      return {
        ...state,
        selectedCheckdivItems: [...action.payload],
      };

    default:
      return state;
  }
  return state;
};

export default function Home() {
  const [state, dispatch] = useReducer(stateReducer, {
    selectedRadioItem: undefined,
    selectedCheckdivItems: [],
  });

  const [fakePersons, setFakePersons] = useState<Person[]>([]);

  const [selectedRadioItem, setSelectedRadioItem] = useState<Person>();
  const [selectedCheckdivItems, setSelectedCheckdivItems] = useState<Person[]>([]);

  useEffect(() => {
    console.log('page rendered');
    const fakePeople = Array.from({ length: 100 }, () => makeFakePeople());
    setFakePersons(fakePeople);
  }, []);
  return (
    <>
      <Head>
        <title>Tanstack Wrapper</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />

        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div style={{ maxWidth: '1024px', margin: '0 auto' }}>
          <div
            style={{
              display: 'flex',
              flexDirection: 'column',
              justifyContent: 'center',
              alignItems: 'center',
            }}
          >
            <h4 style={{ marginBottom: '10px' }}>Next.js Tanstack Table Wrapper example in TypeScript</h4>
          </div>
          <div
            style={{
              paddingTop: '20px',
              paddingBottom: '20px',
            }}
          >
            <AppTable
              data={fakePersons}
              columns={columns}
              getRowId={(row) => row.id}
              clientSidePagination={true}
              pageSize={5}
            />
          </div>
          <div
            style={{
              paddingTop: '20px',
              paddingBottom: '20px',
            }}
          >
            <AppTable
              data={fakePersons}
              columns={columns}
              getRowId={(row) => row.id}
              clientSidePagination={true}
              pageSize={5}
              selectionMode="single"
              onRowSelect={(items: Person[]) => {
                console.log('called single checkdiv handler');
                console.log(items);
                setSelectedRadioItem(items[0]);
                // dispatch({ type: 'SELECT_RADIO_ITEM', payload: items[0] });
              }}
            />
          </div>
          <div
            style={{
              paddingTop: '40px',
              paddingBottom: '40px',
            }}
          >
            <AppTable
              data={fakePersons}
              columns={columns}
              getRowId={(row) => row.id}
              clientSidePagination={true}
              pageSize={5}
              selectionMode="multiple"
              onRowSelect={(items: Person[]) => {
                console.log('called multiselect checkdiv handler');
                // setSelectedCheckdivItems(items);
              }}
            />
          </div>
          <div
            style={{
              position: 'fixed',
              bottom: 0,
              right: 0,
              width: '400px',
              top: 0,
              border: '1px solid rgba(0, 0, 0, 0.23)',
            }}
          >
            <div style={{ padding: '20px' }}>
              <h6 style={{ marginBottom: '20px' }}>Selected Radio Item from local state</h6>
              <pre>{JSON.stringify(selectedRadioItem, null, 2)}</pre>
              <h6 style={{ marginBottom: '20px' }}>Selected Radio Item from app state</h6>
              <pre>{JSON.stringify(state.selectedRadioItem, null, 2)}</pre>
              <h6 style={{ marginBottom: '20px' }}>Selected Checkdiv Items from local state</h6>
              <pre>{JSON.stringify(selectedCheckdivItems, null, 2)}</pre>
              <h6 style={{ marginBottom: '20px' }}>Selected Checkdiv Items from app state</h6>
              <pre>{JSON.stringify(state.selectedCheckdivItems, null, 2)}</pre>
              <button
                style={{ marginRight: '10px' }}
                onClick={() => {
                  setSelectedCheckdivItems([fakePersons[0], fakePersons[1]]);
                }}
              >
                Test Local
              </button>
              <button
                onClick={() => {
                  dispatch({
                    type: 'SELECT_CHECKdiv_ITEM',
                    payload: [fakePersons[0], fakePersons[1]],
                  });
                }}
              >
                Test Dispatch
              </button>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
